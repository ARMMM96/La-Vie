La Vie Todo List



	- Installing packages 			✓  DONE 
	- Initialize express app		✓  DONE 
	- Adding folder structure		✓  DONE
	- Connect to Mongo DB 			✓  DONE
	


________________

	// User data				
	- Users Schema: {

				✓- First Name (required)										
				✓- Last Name  (required)					
				✓- Email 	 (required)					
				✓- Password   (required) [Capital Letter Small Letter Special character and a number]
				✓- Phone number 
				✓- Date of birth
				✓- Gender
				✓- Profile picture
				✓- Addresses
				- Qualification: ref: "myQualification",
				✓- role:  ref: "appRoles", [admin , user, partner]
				✓- Book marks [Urls....]
				✓- Level: [beginner-advanced-professional]
		}




	// Actions on User Model 
		> Route added
		> Method Implemented
		✓- Sign up (Create account) throw regular form 

		- Sign up (Create account) throw or any third party such as (google - facebook)	

		> Route added
		> Methods Implemented
		✓- Login (Read data and validate and create token)

		> Route added
		- Forgot password (Will send verfication code to his email to allow him to update the password)

		> Method Implemented
		> Route added
		✓- Logout (will update user data and remove tokens array);

		> Route added
		> Method Implemented
		✓- Get single to get User data to render it into his Personal profile

		> Route added
		> Method Implemented
		✓- Edit my profile action

		
		> Route added
		> Method Implemented
		✓- Delete account action
	________________________________________________________________________________________________________________

	user must be loggedin to be a partner  
	admin should aprrofe pratnership request 

	Partner Schema								✓  DONE 
		{
			approved: bolean defult :false
			Store name: string required
			No. of Branches: number required
			Store Address
			Email address:
			Mobile number:
			Website:
			Social media:
			Contact role: [Owner, Co-owner, Manager, Employee]
	}

	// Actions	
		// Convert to partner     				<<<<<<< I have no i dea how it will function
		// Return to regular user 				<<<<<< I have no i dea how it will function
		// Create account as partner
		// Update account data
		// Delete account

	
________________________________________________________________________________________________________________

		Rewards Schema 								✓  DONE 
		{
		
			- Rewards [
						{
							rewordName: String
							rewardScore: number
						}
					]
			- TotalRewords: totlNumber of rewords Scoor;
		}


	
________________________________________________________________________________________________________________

product Schema{

	- name
	- description
	- image
	- images[]
	- brand
	- price
	- category:  ref Category
	- countInStock
	- Review: ref products reviews
}


// Actions 

		- Create new product
		- Update product
		- get products
		- remove Product
________________________________________________________________________________________________________________
products review schema {

		title: string
		conent: text
		reating: number from 1 to 10
		product: ref to the proudct by id 
		user: ref user id 

}

	// Actions	
		create review 
		update  reivew
		get reviews for a product
		delete review 


________________________________________________________________________________________________________________

app Roles Schema:{type: String, unique, required}    ✓  DONE 


	// Actions 
			Create Role	 ✓  DONE 
			updte Role	 ✓  DONE 
			get Role	 ✓  DONE 
			get Roles	 ✓  DONE 
			delete Role	 ✓  DONE 
________________________________________________________________________________________________________________

routes  Schema : { 														✓  DONE 
			 - routeName:String, unique, required
			 - roles: ref: [roels id's]
			 }


	// Actions 
			Create route	✓  DONE 
			updte route		✓  DONE 
			get route		✓  DONE 
			get routes		✓  DONE 
			delete route	✓  DONE 


________________________________________________________________________________________________________________

Blogs Schema
{
	title:
	content:
	publishDate:
	rete:[{
		starsNumber: 
		userId: ref:User
	}]
	AvergeRate:avergeValue of useres rate array
	Comments: [
		{
			user: 	userId: ref:User
			content:
		}
	]


}	


// Actions
	// Insert Rate value 
	// get reates
	// delete rate
	// add Comments
	// Edit comment or update comment
	// delete Comments

________________________________________________________________________________________________________________

Quizzes Schema:
	{
		question:
		answers: [array]
		correct answer: index value of correct answer in the array of questions
		question-level: [beginner-advanced-professional]
		rewardScore: number 
	}


// Actions
		// insert question
		// update question
		// get questions based on the user level
		// delete question




________________________________________________________________________________________________________________


// Learn more  & contact us available route for all users

________________________________________________________________________________________________________________


	- Implementing authentication middleware		✓  DONE 

	- Implementing authorization middleware			✓  DONE 